// FOSC
#pragma config FOSFPR = FRC_PLL16
//#pragma config FOSFPR = XT_PLL16        // Oscillator (XT w/PLL 16x)
#pragma config FCKSMEN = CSW_FSCM_OFF   // Clock Switching and Monitor (Sw Disabled, Mon Disabled)

// FWDT
#pragma config FWPSB = WDTPSB_16        // WDT Prescaler B (1:16)
#pragma config FWPSA = WDTPSA_512       // WDT Prescaler A (1:512)
#pragma config WDT = WDT_OFF            // Watchdog Timer (Disabled)

// FBORPOR
#pragma config FPWRT = PWRT_OFF         // POR Timer Value (Timer Disabled)
#pragma config BODENV = BORV20          // Brown Out Voltage (Reserved)
#pragma config BOREN = PBOR_ON          // PBOR Enable (Enabled)
#pragma config MCLRE = MCLR_EN          // Master Clear Enable (Enabled)

// FGS
#pragma config GWRP = GWRP_OFF          // General Code Segment Write Protect (Disabled)
#pragma config GCP = CODE_PROT_OFF      // General Segment Code Protection (Disabled)

// FICD
#pragma config ICS = ICS_PGD            // Comm Channel Select (Use PGC/EMUC and PGD/EMUD)


#include "xc.h"
#include <p30f4013.h>
#include <libpic30.h>
#include <stdio.h>
#include "LCD.h"
//address de inicio 0x007F F000

#define ERASE_WORD 0x4045
#define WRITE_WORD 0x4004
#define ADDRESS_HI 0x007F
#define EEPROM_LOW_START_ADDRESS 0xFC00
#define TRUE 1
 


void Eeprom_WriteWord(unsigned short  pushAddressOffset, unsigned short value);
unsigned short Eeprom_ReadWord(unsigned short  pushAddressOffset);
char buf[20];
 
int main(void)
{   
    unsigned short value;
    iniciaLCD(FOUR_BIT & TWO_LINE );
    while(busyLCD()); 
    putsLCD(" INICIO "); 
    Eeprom_WriteWord(13, 0x0FFF);
    value = Eeprom_ReadWord(13); 
    sprintf(buf,"%d",value);
    

    while(busyLCD());
    setDDRamAddr(0x40); // Cambia al segundo reglon
    putsLCD(buf);
    while(1);
}
 
unsigned short Eeprom_ReadWord(unsigned short  pushAddressOffset) {
   unsigned short ushResult;
   register int eedata_addr; 
   register int eedata_val; 
  unsigned short pushAddress;
   pushAddressOffset = pushAddressOffset*2;
   pushAddress = pushAddressOffset + EEPROM_LOW_START_ADDRESS;
   TBLPAG = ADDRESS_HI;
   eedata_addr = (unsigned short)pushAddress;
   __asm__("TBLRDL [%[addr]], %[val]" : [val]"=r"(eedata_val) : [addr]"r"(eedata_addr)); 
   ushResult = eedata_val; 
   return (ushResult);
 }
 
void Eeprom_WriteWord(unsigned short  pushAddressOffset, unsigned short value) {
  unsigned short pushAddress;
   pushAddressOffset = pushAddressOffset*2;
   pushAddress = pushAddressOffset + EEPROM_LOW_START_ADDRESS;
   TBLPAG = ADDRESS_HI;
   NVMADRU = ADDRESS_HI; 
   NVMADR = (unsigned short) pushAddress;
 
   NVMCON = ERASE_WORD; 
    NVMKEY = 0x55;
    NVMKEY = 0xAA;
    NVMCONbits.WR = TRUE; 
   while (NVMCONbits.WR == TRUE); 
    
   NVMCON = WRITE_WORD;
   {
      register int eedata_addr; 
      register int eedata_val; 
      eedata_addr = (unsigned short)pushAddress;
      eedata_val = value; 
      __asm__ volatile ("TBLWTL %[val], [%[addr]]" : [val]"+r"(eedata_val) : [addr]"r"(eedata_addr));
   }
    
    NVMCON = WRITE_WORD;
    NVMKEY = 0x55; 
    NVMKEY = 0xAA; 
    NVMCONbits.WR = TRUE; 
   while (NVMCONbits.WR == TRUE); 

 }