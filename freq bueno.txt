/*
 * File:   main_frec.c
 * Author: MarthaAlicia
 *
 * Created on 26 de junio de 2018, 06:20 PM
 */


#include "xc.h"
#include<p30F4013.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

// FOSC
#pragma config FOSFPR = FRC_PLL16
//#pragma config FOSFPR = XT_PLL16        // Oscillator (XT w/PLL 16x)
#pragma config FCKSMEN = CSW_FSCM_OFF   // Clock Switching and Monitor (Sw Disabled, Mon Disabled)

// FWDT
#pragma config FWPSB = WDTPSB_16        // WDT Prescaler B (1:16)
#pragma config FWPSA = WDTPSA_512       // WDT Prescaler A (1:512)
#pragma config WDT = WDT_OFF            // Watchdog Timer (Disabled)

// FBORPOR
#pragma config FPWRT = PWRT_OFF         // POR Timer Value (Timer Disabled)
#pragma config BODENV = BORV20          // Brown Out Voltage (Reserved)
#pragma config BOREN = PBOR_ON          // PBOR Enable (Enabled)
#pragma config MCLRE = MCLR_EN          // Master Clear Enable (Enabled)

// FGS
#pragma config GWRP = GWRP_OFF          // General Code Segment Write Protect (Disabled)
#pragma config GCP = CODE_PROT_OFF      // General Segment Code Protection (Disabled)

// FICD
#pragma config ICS = ICS_PGD            // Comm Channel Select (Use PGC/EMUC and PGD/EMUD)

#define FCY (unsigned long)7372800*4   //add your operating frequency
#define UART1_BAUD 9600
#define UART2_BAUD 9600
#define UBRG1_VALUE (FCY/UART1_BAUD)/16 - 1
#define UBRG2_VALUE (FCY/UART2_BAUD)/16 - 1

void InitUART1(void);
void WriteUART1(unsigned int data);
void WriteUART1dec2string(unsigned int data);
void WriteStringUART1(const char * s);//for strings
void InitUART2(void);
void WriteUART2(unsigned int data);
void WriteUART2dec2string(unsigned int data);
void WriteStringUART2(const char * s);

void retardo (int t);//INSTANCIA DECLARACION DE LA FUNCION


unsigned int i,j,delay=500; //variables for getting loop delay
int tempRX, tempRX2;
unsigned long Freq,ticks_prom=0,cont=0;
double ticks=0;
char buf[20];
//-----------------------------------------------------------------
void __attribute__((interrupt, no_auto_psv)) _U1RXInterrupt(void)
{
    IFS0bits.U1RXIF = 0;
    tempRX = U1RXREG;
}
void __attribute__((interrupt, no_auto_psv)) _U2RXInterrupt(void) {
    IFS1bits.U2RXIF = 0;
    tempRX2 = U2RXREG;
}
void __attribute__((interrupt, no_auto_psv)) _T3Interrupt(void) {
    _T1IE=0;
    //cont*=10;
    sprintf(buf, "%lu\n", cont);
    WriteStringUART2(buf);
    cont=0;
    _T1IE=1;
    _T3IF=0;
}
void __attribute__((interrupt, no_auto_psv)) _T1Interrupt(void) {
    cont++;
    _T1IF=0;
}

void interruptciones()
{
    
}

void main(void)
{
//TRISB=0x0000;//definir pins b como salidas/ salidas=0 entradas=1
    
//ADPCFG=0xFFFF;// definir pins b como digital 1=digital 0=analogico
//LATB=0x0000;//poner los leds en estado apagado
//TIMER 1
TRISC=0xFFFF;
_NSTDIS=1;//Encimar interrupciones
_T1IP=4;
TMR1=0;
ticks_prom=0;
PR1=0xFFFF;
T1CON = 0x0016;
T1CONbits.TON=1;
_T1IF=0;
_T1IE=1;

//TIMER 2/3
_T3IP=6;
TMR2=0;
TMR3=0;
PR3=454;
T2CONbits.T32=1;
T2CONbits.TCKPS=0;
T2CONbits.TCS=0;
T2CONbits.TON=1;
_T3IF=0;
_T3IE=1;

InitUART2();
while(1)
{

}//main
}

void retardo(int t){
        for(i=0;i<t;i++) //random delay
        for(j=0;j<2000;j++);
}



void InitUART1(void)
{
    U1BRG=UBRG1_VALUE; ///baud rate 115200
    U1MODEbits.ALTIO=0;
    IEC0bits.U1RXIE=1;
    U1STA&=0xfffc;
    U1MODEbits.UARTEN=1;
    U1STAbits.UTXEN=1;
}

void WriteUART1(unsigned int data)
{
    while (U1STAbits.TRMT==0);
    if(U1MODEbits.PDSEL == 3)
        U1TXREG = data;
    else
        U1TXREG = data & 0xFF;
}
void WriteUART1dec2string(unsigned int data)
{
    unsigned char temp;
    temp=data/1000;
    WriteUART1(temp+'0');
    data=data-temp*1000;
    temp=data/100;
    WriteUART1(temp+'0');
    data=data-temp*100;
    temp=data/10;
    WriteUART1(temp+'0');
    data=data-temp*10;
    WriteUART1(data+'0');
}
void WriteStringUART1(const char * s)
{
    while(*s)
            WriteUART1(*s++);
}
//UART2
void InitUART2(void)
{
    U2BRG = UBRG2_VALUE; // baud rate 9600
    U2STA &= 0xfffc;
    IEC1bits.U2RXIE = 1; // enable RX2 interrupt
    U2MODEbits.UARTEN = 1; // UARTEN: UART Enable bit
    U2STAbits.UTXEN = 1; // transmition ON
}
void WriteUART2 (unsigned int data)
{
    U2TXREG = data;
    while(!U2STAbits.TRMT){}
}
void WriteUART2dec2string(unsigned int data)
{
    unsigned char temp;
    temp=data/1000;
    WriteUART2(temp+'0');
    data=data-temp*1000;
    temp=data/100;
    WriteUART2(temp+'0');
    data=data-temp*100;
    temp=data/10;
    WriteUART2(temp+'0');
    data=data-temp*10;
    WriteUART2(data+'0');
}
void WriteStringUART2(const char * s)
{
    while(*s)
            WriteUART2(*s++);
} 